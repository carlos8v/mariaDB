<script>
  /**
   * Custom dropdown component
   *
   * @example
   * <custom-dropdown aria-expanded="true">
   *  <div>
   *    <button is="custom-dropdown-trigger">
   *      Button
   *    </button>
   *  </div>
   *  <custom-dropdown-content position="top|bottom">
   *    ...
   *  </custom-dropdown-content>
   * </div>
   */

  class CustomDropdown extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.classList.add(..."relative inline-block text-left group".split(" "));

      const overlay = document.createElement("div");
      overlay.classList.add(
        ..."fixed inset-0 z-10 pointer-events-none opacity-0 group-aria-expanded:opacity-100 group-aria-expanded:pointer-events-auto transition".split(
          " "
        )
      );
      this.appendChild(overlay);

      overlay.addEventListener("click", function (e) {
        if (e.target.parentElement.getAttribute("aria-expanded") === "true") {
          e.target.parentElement.setAttribute("aria-expanded", "false");
        }
      });
    }
  }

  class CustomDropdownTrigger extends HTMLButtonElement {
    constructor() {
      super();
    }

    connectedCallback() {
      this.type = "button";
      this.setAttribute("aria-haspopup", "true");

      this.addEventListener("click", function (e) {
        const expanded =
          this.parentElement.parentElement.getAttribute("aria-expanded") ===
          "true";

        this.parentElement.parentElement.setAttribute(
          "aria-expanded",
          !expanded
        );
      });
    }
  }

  class CustomDropdownContent extends HTMLElement {
    constructor() {
      super();
    }

    connectedCallback() {
      const defaultPosition = "bottom";
      const availablePostions = new Set(["top", "bottom"]);

      const position = this.getAttribute("position");
      const currentPosition = availablePostions.has(position)
        ? position
        : "bottom";

      const classesByPosition = {
        bottom: "right-0 mt-2 origin-top-right",
        top: "right-0 top-0 -translate-y-[calc(100%+8px)]",
      };

      this.role = "menu";
      const classes = `absolute z-20 w-56 ${classesByPosition[currentPosition]} rounded-md bg-white ring-1 shadow-lg ring-black/5 focus:outline-hidden transition ease-out duration-100 opacity-0 scale-95 pointer-events-none group-aria-expanded:pointer-events-auto group-aria-expanded:opacity-100 group-aria-expanded:scale-100`;

      this.classList.add(...classes.split(" "));
      this.setAttribute("aria-orientation", "vertical");
      this.setAttribute("aria-labelledby", "menu-button");
    }
  }

  customElements.define("custom-dropdown", CustomDropdown);
  customElements.define("custom-dropdown-trigger", CustomDropdownTrigger, {
    extends: "button",
  });
  customElements.define("custom-dropdown-content", CustomDropdownContent);
</script>
